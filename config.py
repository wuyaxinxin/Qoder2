#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
文件名: config.py
作者: 开发者
创建日期: 2025-10-13
版本: 1.0
描述: 学生管理系统配置文件
"""

# ============================================================================
# 系统配置
# ============================================================================

# 系统名称
SYSTEM_NAME = "学生管理系统"
SYSTEM_VERSION = "2.0"

# ============================================================================
# 数据配置
# ============================================================================

# 默认数据文件路径
DEFAULT_DATA_FILE = "students_data.json"

# CSV导出默认文件名
DEFAULT_CSV_FILE = "students_export.csv"

# 数据备份配置
ENABLE_BACKUP = True
BACKUP_DIR = "backups"
MAX_BACKUP_FILES = 5  # 最多保留的备份文件数

# ============================================================================
# 成绩配置
# ============================================================================

# 成绩范围
MIN_SCORE = 0
MAX_SCORE = 100

# 及格分数线
PASSING_SCORE = 60

# 优秀学生标准
EXCELLENT_THRESHOLD = 85  # 平均分阈值

# ============================================================================
# 学号配置
# ============================================================================

# 学号格式: 年份(4位) + 序号(3位)
STUDENT_ID_PATTERN = r'^20\d{2}\d{3}$'
STUDENT_ID_LENGTH = 7

# 年龄范围
MIN_AGE = 0
MAX_AGE = 150

# ============================================================================
# 显示配置
# ============================================================================

# 排名显示数量
DEFAULT_TOP_COUNT = 10

# 每页显示学生数(用于分页)
STUDENTS_PER_PAGE = 20

# 表格宽度
TABLE_WIDTH = 90

# ============================================================================
# 验证配置
# ============================================================================

# 必填字段
REQUIRED_FIELDS = ['name', 'age', 'student_id']

# 姓名长度限制
MIN_NAME_LENGTH = 1
MAX_NAME_LENGTH = 50

# 专业名称长度限制
MAX_MAJOR_LENGTH = 100

# ============================================================================
# 导出配置
# ============================================================================

# CSV编码
CSV_ENCODING = 'utf-8-sig'  # 带BOM的UTF-8,Excel友好

# CSV表头
CSV_HEADERS = ['学号', '姓名', '年龄', '专业', '平均成绩', '最高分', '最低分', '科目数']

# ============================================================================
# 日志配置
# ============================================================================

# 是否启用日志
ENABLE_LOGGING = False

# 日志文件
LOG_FILE = "student_system.log"

# 日志级别: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL = "INFO"

# ============================================================================
# 界面配置
# ============================================================================

# 是否显示欢迎信息
SHOW_WELCOME = True

# 是否清屏
AUTO_CLEAR_SCREEN = False

# 菜单分隔符
MENU_SEPARATOR = "=" * 60

# ============================================================================
# 统计配置
# ============================================================================

# 专业统计 - 是否显示百分比
SHOW_PERCENTAGE = True

# 统计精度(小数位数)
STATISTICS_PRECISION = 2

# ============================================================================
# 高级配置
# ============================================================================

# 是否启用缓存
ENABLE_CACHE = False

# 缓存过期时间(秒)
CACHE_EXPIRE_TIME = 300

# 是否自动保存
AUTO_SAVE = True

# 自动保存间隔(操作次数)
AUTO_SAVE_INTERVAL = 5

# ============================================================================
# 功能开关
# ============================================================================

# 是否启用数据验证
ENABLE_VALIDATION = True

# 是否启用删除确认
ENABLE_DELETE_CONFIRM = True

# 是否允许重复姓名
ALLOW_DUPLICATE_NAMES = True

# 是否显示调试信息
DEBUG_MODE = False

# ============================================================================
# 性能配置
# ============================================================================

# 最大学生数量(警告阈值)
MAX_STUDENTS_WARNING = 10000

# 单次加载最大学生数
MAX_LOAD_STUDENTS = 50000

# ============================================================================
# 消息配置
# ============================================================================

# 成功消息前缀
SUCCESS_PREFIX = "✓ "

# 错误消息前缀
ERROR_PREFIX = "✗ "

# 警告消息前缀
WARNING_PREFIX = "⚠ "

# 信息消息前缀
INFO_PREFIX = "ℹ "

# ============================================================================
# 辅助函数
# ============================================================================

def get_config(key, default=None):
    """
    获取配置项
    
    Args:
        key: 配置键名
        default: 默认值
        
    Returns:
        配置值或默认值
    """
    return globals().get(key, default)


def update_config(key, value):
    """
    更新配置项
    
    Args:
        key: 配置键名
        value: 新值
    """
    globals()[key] = value


def load_config_from_file(filename="config.ini"):
    """
    从配置文件加载配置(可选功能)
    
    Args:
        filename: 配置文件路径
    """
    # TODO: 实现从INI或JSON文件加载配置
    pass


def save_config_to_file(filename="config.ini"):
    """
    保存配置到文件(可选功能)
    
    Args:
        filename: 配置文件路径
    """
    # TODO: 实现保存配置到文件
    pass


# ============================================================================
# 配置验证
# ============================================================================

def validate_config():
    """验证配置的合法性"""
    errors = []
    
    # 验证分数范围
    if MIN_SCORE < 0 or MAX_SCORE > 100 or MIN_SCORE >= MAX_SCORE:
        errors.append("分数范围配置错误")
    
    # 验证及格线
    if not (MIN_SCORE <= PASSING_SCORE <= MAX_SCORE):
        errors.append("及格分数线配置错误")
    
    # 验证优秀线
    if not (PASSING_SCORE <= EXCELLENT_THRESHOLD <= MAX_SCORE):
        errors.append("优秀分数线配置错误")
    
    # 验证年龄范围
    if MIN_AGE < 0 or MAX_AGE > 150 or MIN_AGE >= MAX_AGE:
        errors.append("年龄范围配置错误")
    
    if errors:
        raise ValueError("配置验证失败:\n" + "\n".join(f"  - {e}" for e in errors))
    
    return True


# 启动时验证配置
if __name__ == "__main__":
    try:
        validate_config()
        print("✓ 配置验证通过")
        
        # 显示主要配置
        print(f"\n{SYSTEM_NAME} v{SYSTEM_VERSION}")
        print(f"数据文件: {DEFAULT_DATA_FILE}")
        print(f"及格分数线: {PASSING_SCORE}")
        print(f"优秀标准: ≥{EXCELLENT_THRESHOLD}")
        print(f"自动保存: {'启用' if AUTO_SAVE else '禁用'}")
        
    except ValueError as e:
        print(f"✗ {e}")
