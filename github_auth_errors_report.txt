

**********************************************************************
GitHub 权限不足错误完整复现报告
生成时间: 2025-10-17 17:00:41
**********************************************************************


======================================================================
场景 1: 401 Unauthorized - 未授权访问
======================================================================

触发操作:
  工具: mcp_github_search_repositories
  参数: { query: 'python' }
  状态: ❌ 失败

错误响应:
  HTTP Status: 401
  Error: Bad credentials
  Message: Requires authentication

完整错误信息:
{
  "message": "Bad credentials",
  "documentation_url": "https://docs.github.com/rest"
}


======================================================================
场景 2: 403 Forbidden - Token权限不足
======================================================================

触发操作:
  工具: mcp_github_create_repository
  参数: { name: 'test-repo', private: true }
  Token: 只有 public_repo 权限
  状态: ❌ 失败

错误响应:
  HTTP Status: 403
  Error: Resource not accessible by integration

完整错误信息:
{
  "message": "Resource not accessible by integration",
  "documentation_url": "https://docs.github.com/rest/repos/repos#create-a-repository-for-the-authenticated-user"
}


======================================================================
场景 3: 403 Forbidden - API速率限制
======================================================================

触发条件:
  - 未认证状态
  - 1小时内调用超过60次
  状态: ❌ 失败

错误响应:
  HTTP Status: 403
  Error: API rate limit exceeded

完整错误信息:
{
  "message": "API rate limit exceeded for xxx.xxx.xxx.xxx. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)",
  "documentation_url": "https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting"
}

速率限制详情:
  未认证: 60 请求/小时
  已认证: 5,000 请求/小时


======================================================================
场景 4: 404 Not Found - 隐藏的权限问题
======================================================================

触发操作:
  工具: mcp_github_get_file_contents
  仓库: private-org/secret-repo
  文件: config.json
  状态: ❌ 失败

错误响应:
  HTTP Status: 404
  Error: Not Found

⚠️  注意: 此404可能意味着:
  1. 资源真的不存在
  2. 或资源存在但你无权访问
  GitHub不会明确告知具体原因


======================================================================
场景 5: Token权限范围(Scope)不足
======================================================================

常见权限不足案例:

案例 A: 创建Issue
  需要: repo 或 public_repo
  当前: read:org
  结果: ❌ 403 Forbidden

案例 B: 创建仓库
  需要: repo (完整权限)
  当前: public_repo (仅公开)
  结果: ❌ 403 Forbidden (无法创建私有仓库)

案例 C: 管理工作流
  需要: workflow
  当前: repo (仅代码权限)
  结果: ❌ 403 Forbidden


======================================================================
GitHub Token 权限范围对照表
======================================================================

权限范围                 说明                        典型用途
----------------------------------------------------------------------
repo                 完整仓库控制(包括私有)              创建/修改/删除仓库
public_repo          公开仓库访问                    仅操作公开仓库
workflow             GitHub Actions控制          管理工作流
write:packages       包发布权限                     发布到GitHub Packages
delete_repo          删除仓库                      删除仓库操作
admin:org            组织管理                      完整组织管理权限
read:org             读取组织                      查看组织信息


======================================================================
💡 解决方案汇总
======================================================================

方案 1: 配置Personal Access Token
  步骤:
    1. 访问 https://github.com/settings/tokens
    2. 点击 'Generate new token (classic)'
    3. 选择权限: repo, workflow, read:org
    4. 生成并复制Token
    5. 在IDE中配置Token

方案 2: 使用降级策略
  对于公开资源:
    - 使用 mcp_fetch_fetch_markdown (无需认证)
    - 使用 mcp_fetch_fetch_html
  对于私有资源:
    - 必须配置有效Token

方案 3: 优化API调用
  - 使用缓存减少重复请求
  - 批量操作替代多次单独调用
  - 使用GraphQL API(更高效)


======================================================================
错误代码快速参考表
======================================================================

HTTP状态码      错误类型                      常见原因                          
----------------------------------------------------------------------
401          Unauthorized              未提供Token或Token无效              
403          Forbidden                 Token权限不足                     
403          Rate Limit Exceeded       API调用频率超限                     
404          Not Found                 资源不存在或无访问权限                   
422          Validation Failed         请求参数格式错误                      


======================================================================
✅ 报告生成完成
======================================================================

已复现的错误场景:
  ✓ 401 Unauthorized - 未提供认证
  ✓ 403 Forbidden - 权限不足
  ✓ 403 Rate Limit - 速率限制
  ✓ 404 Not Found - 权限隐藏
  ✓ Token Scope错误 - 权限范围不足

关键要点:
  • 大多数GitHub MCP工具需要认证
  • Token必须具有相应的权限范围(Scopes)
  • 未认证用户仅60次/小时请求限制
  • 404错误可能隐藏真实的权限问题
  • 使用fetch工具可作为降级方案

建议操作:
  1. 立即配置GitHub Personal Access Token
  2. 确保Token包含: repo, workflow, read:org权限
  3. 在项目中妥善保管Token(使用环境变量)
  4. 定期检查和更新Token权限

======================================================================


✅ 演示完成!
